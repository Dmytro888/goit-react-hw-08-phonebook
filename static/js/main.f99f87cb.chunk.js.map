{"version":3,"sources":["redux/phonebook/phonebook-actions.js","redux/auth/auth-selector.js","components/Navigation/Navigation.jsx","components/AuthNav/AuthNav.jsx","images/images.jpg","components/UserMenu/UserMenu.jsx","components/NavBar/NavBar.jsx","routes.js","components/PublickRoute/PublicRoute.jsx","components/PrivateRoute/PrivateRoute.jsx","components/App.js","redux/phonebook/phonebook-reducer.js","redux/auth/auth-reducer.js","redux/store.js","index.js","components/AuthNav/AuthNav.module.css","components/Navigation/Navigation.module.css","redux/auth/auth-operations.js","components/UserMenu/UserMenu.module.css","redux/auth/auth-actions.js","components/NavBar/NavBar.module.css","components/App.module.css"],"names":["fetchContactsRequest","createAction","fetchContactsSucces","fetchContactsError","addContactRequest","addContactSucces","addContactError","deleteContactRequest","deleteContactSucces","deleteContactError","filterContacts","getLogged","state","auth","isLogged","getName","user","name","connect","console","log","className","styles","navigation","link","exact","btn","type","activeClassName","to","Navigation","authBtn","mapDispatchToProps","onLogout","logout","avatar","getAvatar","userNav","src","width","userBtn","onClick","mainHeader","AuthNav","routes","home","register","login","contacts","Component","component","redirectTo","routeProps","render","props","restricted","HomePage","lazy","PhonebookPage","RegisterPage","LoginPage","App","this","onGetCurrentUser","fallback","Loader","color","height","path","getCurrentUser","items","createReducer","_","action","payload","id","findIndex","contact","slice","filter","_state","loading","combineReducers","initialState","email","registerSucces","loginSucces","logoutSucces","getCurrentUserSucces","token","error","registerError","loginError","logoutError","getCurrentUserError","authPersistConfig","key","storage","blacklist","whitelist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","phonebook","phonebookReducer","persistReducer","authReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById","module","exports","Axios","defaults","baseURL","headers","common","Authorization","credentials","dispatch","a","registerRequest","post","response","data","message","loginRequest","logoutRequest","getState","persistedToken","getCurrentUserRequest","get"],"mappings":"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","file":"static/js/main.f99f87cb.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\r\nconst fetchContactsSucces = createAction('contacts/fetchContactsSuccess');\r\nconst fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nconst addContactRequest = createAction('phonebook/addContactRequest');\r\nconst addContactSucces = createAction('phonebook/addContactSucces');\r\nconst addContactError = createAction('phonebook/addContactError');\r\n\r\nconst deleteContactRequest = createAction('phonebook/deleteContactRequest');\r\nconst deleteContactSucces = createAction('phonebook/deleteContactSucces');\r\nconst deleteContactError = createAction('phonebook/deleteContactError');\r\n\r\nconst filterContacts = createAction('FILTER_CONTACTS');\r\n\r\nexport {\r\n  filterContacts,\r\n  addContactRequest,\r\n  addContactSucces,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSucces,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSucces,\r\n  fetchContactsError,\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLogged = state => !!state.auth.isLogged;\r\nconst getName = state => state.auth.user.name;\r\n\r\nexport { getLogged, getName };\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { getLogged } from '../../redux/auth/auth-selector';\r\nimport styles from './Navigation.module.css';\r\n\r\nconst Navigation = ({ isLogged }) => {\r\n  console.log(isLogged);\r\n  return (\r\n    <div>\r\n      <ul className={styles.navigation}>\r\n        <li>\r\n          <NavLink\r\n            className={styles.link}\r\n            exact\r\n            className=''\r\n            activeClassName=''\r\n            to='/'\r\n          >\r\n            <button className={styles.btn} type='button'>\r\n              Home\r\n            </button>\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          {isLogged && (\r\n            <NavLink exact className='' activeClassName='' to='/contacts'>\r\n              <button className={styles.btn} type='button'>\r\n                Contacts\r\n              </button>\r\n            </NavLink>\r\n          )}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isLogged: getLogged(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './AuthNav.module.css';\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <div>\r\n      <ul className={styles.navigation}>\r\n        <li className={styles.link}>\r\n          <NavLink exact className='' activeClassName='' to='/register'>\r\n            <button type='button' className={styles.authBtn}>\r\n              Register\r\n            </button>\r\n          </NavLink>\r\n        </li>\r\n        <li className={styles.link}>\r\n          <NavLink exact className='' activeClassName='' to='/login'>\r\n            <button type='button' className={styles.authBtn}>\r\n              Login\r\n            </button>\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","export default __webpack_public_path__ + \"static/media/images.c323bf16.jpg\";","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getName } from '../../redux/auth/auth-selector';\r\nimport { logout } from '../../redux/auth/auth-operations';\r\nimport getAvatar from '../../images/images.jpg';\r\nimport styles from './UserMenu.module.css';\r\n\r\nconst UserMenu = ({ name, avatar, onLogout }) => {\r\n  return (\r\n    <div className={styles.userNav}>\r\n      <img src={avatar} width='30'></img>\r\n      <span>Welcome,{name}!</span>\r\n      <button className={styles.userBtn} type='button' onClick={onLogout}>\r\n        Log out\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  name: getName(state),\r\n  avatar: getAvatar,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: logout,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Navigation from '../Navigation';\r\nimport AuthNav from '../AuthNav';\r\nimport UserMenu from '../UserMenu';\r\nimport { getLogged } from '../../redux/auth/auth-selector';\r\nimport styles from './NavBar.module.css';\r\n\r\nconst NavBar = ({ isLogged }) => {\r\n  return (\r\n    <header className={styles.mainHeader}>\r\n      <Navigation />\r\n      {isLogged ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isLogged: getLogged(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(NavBar);\r\n","const routes = {\r\n  home: '/',\r\n  register: '/register',\r\n  login: '/login',\r\n  contacts: '/contacts',\r\n};\r\n\r\nexport default routes;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getLogged } from '../../redux/auth/auth-selector';\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isLogged,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isLogged && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isLogged: getLogged(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getLogged } from '../../redux/auth/auth-selector';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isLogged,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isLogged ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isLogged: getLogged(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { lazy, Suspense, Component } from 'react';\r\nimport { Switch, Redirect } from 'react-router-dom';\r\nimport NavBar from './NavBar';\r\nimport Loader from 'react-loader-spinner';\r\nimport routes from '../routes';\r\nimport { getCurrentUser } from '../redux/auth/auth-operations';\r\nimport { connect } from 'react-redux';\r\nimport PublicRoute from './PublickRoute';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport styles from './App.module.css';\r\n\r\nconst HomePage = lazy(() =>\r\n  import('../pages/HomePage' /* webpackChunkName: \"home-page\" */),\r\n);\r\nconst PhonebookPage = lazy(() =>\r\n  import('../pages/PhonebookPage' /* webpackChunkName: \"contacts-page\" */),\r\n);\r\n\r\nconst RegisterPage = lazy(() =>\r\n  import('../pages/RegisterPage' /* webpackChunkName: \"reg-page\" */),\r\n);\r\nconst LoginPage = lazy(() =>\r\n  import('../pages/LoginPage' /* webpackChunkName: \"log-page\" */),\r\n);\r\n\r\nclass App extends Component {\r\n  componentDidMount () {\r\n    this.props.onGetCurrentUser();\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <>\r\n        <NavBar />\r\n        <Suspense\r\n          fallback={\r\n            <Loader\r\n              className={styles.Loader}\r\n              type='Oval'\r\n              color='#777'\r\n              height={280}\r\n              width={280}\r\n            />\r\n          }\r\n        >\r\n          <Switch>\r\n            <PublicRoute exact path={routes.home} component={HomePage} />\r\n            <PrivateRoute\r\n              exact\r\n              path={routes.contacts}\r\n              component={PhonebookPage}\r\n              redirectTo={routes.login}\r\n            />\r\n            <PublicRoute\r\n              exact\r\n              restricted\r\n              path={routes.register}\r\n              component={RegisterPage}\r\n              redirectTo={routes.contacts}\r\n            />\r\n            <PublicRoute\r\n              exact\r\n              restricted\r\n              path={routes.login}\r\n              component={LoginPage}\r\n              redirectTo={routes.contacts}\r\n            />\r\n\r\n            <Redirect to={routes.home} />\r\n          </Switch>\r\n        </Suspense>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onGetCurrentUser: getCurrentUser,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  filterContacts,\r\n  addContactRequest,\r\n  addContactSucces,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSucces,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSucces,\r\n  fetchContactsError,\r\n} from './phonebook-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSucces]: (_, action) => action.payload,\r\n  [addContactSucces]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSucces]: (state, { payload }) => {\r\n    const id = state.findIndex(contact => contact.id === payload);\r\n\r\n    return [...state.slice(0, id), ...state.slice(id + 1)];\r\n  },\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [filterContacts]: (_state, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSucces]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSucces]: () => false,\r\n  [deleteContactError]: () => false,\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSucces]: () => false,\r\n  [fetchContactsError]: () => false,\r\n});\r\n\r\n// const error = createReducer(null, {  });\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  registerRequest,\r\n  registerSucces,\r\n  registerError,\r\n  loginRequest,\r\n  loginSucces,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSucces,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSucces,\r\n  getCurrentUserError,\r\n} from './auth-actions';\r\n\r\nconst initialState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialState, {\r\n  [registerSucces]: (_, { payload }) => payload.user,\r\n  [loginSucces]: (_, { payload }) => payload.user,\r\n  [logoutSucces]: () => initialState,\r\n  [getCurrentUserSucces]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [registerSucces]: (_, { payload }) => payload.token,\r\n  [loginSucces]: (_, { payload }) => payload.token,\r\n  [logoutSucces]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [registerError]: (_, { payload }) => payload,\r\n  [loginError]: (_, { payload }) => payload,\r\n  [logoutError]: (_, { payload }) => payload,\r\n  [getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isLogged = createReducer(false, {\r\n  [registerSucces]: () => true,\r\n  [loginSucces]: () => true,\r\n  [getCurrentUserSucces]: () => true,\r\n  [registerError]: () => false,\r\n  [loginError]: () => false,\r\n  [getCurrentUserError]: () => false,\r\n  [logoutSucces]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n  isLogged,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n\r\nimport phonebookReducer from './phonebook/phonebook-reducer';\r\nimport authReducer from './auth/auth-reducer';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst authPersistConfig = {\r\n  key: 'phonebook',\r\n  storage,\r\n  blacklist: ['loading', '_persist'],\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: phonebookReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\n\nimport App from './components/App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store.store}>\n    <PersistGate loading={null} persistor={store.persistor}>\n      <React.StrictMode>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </React.StrictMode>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"AuthNav_navigation__vGnCD\",\"authBtn\":\"AuthNav_authBtn__2JcgC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navigation_navigation__1cRbH\",\"link\":\"Navigation_link__1e_Yp\",\"btn\":\"Navigation_btn__KjqZN\"};","import Axios from 'axios';\r\nimport {\r\n  registerRequest,\r\n  registerSucces,\r\n  registerError,\r\n  loginRequest,\r\n  loginSucces,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSucces,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSucces,\r\n  getCurrentUserError,\r\n} from './auth-actions';\r\n\r\nAxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set (token) {\r\n    Axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset () {\r\n    Axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n  dispatch(registerRequest(credentials));\r\n  try {\r\n    const response = await Axios.post('/users/signup', credentials);\r\n    token.set(response.data.token);\r\n\r\n    dispatch(registerSucces(response.data));\r\n  } catch (error) {\r\n    dispatch(registerError(error.message));\r\n  }\r\n};\r\n\r\nconst login = credentials => async dispatch => {\r\n  dispatch(loginRequest(credentials));\r\n  try {\r\n    const response = await Axios.post('/users/login', credentials);\r\n    token.set(response.data.token);\r\n\r\n    dispatch(loginSucces(response.data));\r\n  } catch (error) {\r\n    dispatch(loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logout = () => async dispatch => {\r\n  dispatch(logoutRequest());\r\n  try {\r\n    await Axios.post('/users/logout');\r\n    token.unset();\r\n    dispatch(logoutSucces());\r\n  } catch (error) {\r\n    dispatch(logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n\r\n  dispatch(getCurrentUserRequest());\r\n  try {\r\n    const response = await Axios.get('/users/current');\r\n    dispatch(getCurrentUserSucces(response.data));\r\n  } catch (error) {\r\n    dispatch(getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nexport { register, login, logout, getCurrentUser };\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userNav\":\"UserMenu_userNav__15Mzh\",\"userBtn\":\"UserMenu_userBtn__2CSqW\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('contacts/registerRequestRequest');\r\nconst registerSucces = createAction('contacts/registerRequestSuccess');\r\nconst registerError = createAction('contacts/registerRequestError');\r\n\r\nconst loginRequest = createAction('contacts/loginRequest');\r\nconst loginSucces = createAction('contacts/loginSuccess');\r\nconst loginError = createAction('contacts/loginError');\r\n\r\nconst logoutRequest = createAction('contacts/logoutRequest');\r\nconst logoutSucces = createAction('contacts/logoutSuccess');\r\nconst logoutError = createAction('contacts/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('contacts/currentUserRequest');\r\nconst getCurrentUserSucces = createAction('contacts/currentUserSuccess');\r\nconst getCurrentUserError = createAction('contacts/currentUserError');\r\n\r\nexport {\r\n  registerRequest,\r\n  registerSucces,\r\n  registerError,\r\n  loginRequest,\r\n  loginSucces,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSucces,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSucces,\r\n  getCurrentUserError,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainHeader\":\"NavBar_mainHeader__2Q4kk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"App_Loader__11qjo\"};"],"sourceRoot":""}
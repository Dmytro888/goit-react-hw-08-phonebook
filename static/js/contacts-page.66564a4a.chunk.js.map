{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","pages/PhonebookPage/PhonebookPage.module.css","redux/phonebook/phonebook-selectors.js","components/ContactForm/ContactForm.jsx","redux/phonebook/phonebook-operations.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/PhonebookPage/PhonebookPage.jsx"],"names":["module","exports","getLoading","state","phonebook","loading","getContacts","items","getFilter","filter","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","ContactForm","number","handleChange","event","target","value","setState","console","log","handleSubmit","preventDefault","hasContactName","props","myContacts","some","item","hasContactNumber","alert","createContact","this","className","styles","inputSection","onSubmit","label","input","type","onChange","placeholder","button","Component","connect","dispatch","a","addContactRequest","Axios","post","data","addContactSucces","addContactError","message","addContact","contacts","deleteContact","id","deleteContactRequest","delete","deleteContactSucces","error","listSection","map","onClick","filterContacts","filterTitle","filterInput","Phonebook","renderContacts","isLoading","container","color","height","width","fetchContactsRequest","get","fetchContactsSucces","fetchContactsError"],"mappings":"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","file":"static/js/contacts-page.66564a4a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputSection\":\"ContactForm_inputSection__2-StE\",\"input\":\"ContactForm_input__2t3II\",\"label\":\"ContactForm_label__GCFxJ\",\"button\":\"ContactForm_button__5kX93\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listSection\":\"ContactList_listSection__2mg7e\",\"item\":\"ContactList_item__mMtHK\",\"button\":\"ContactList_button__2U_bw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterTitle\":\"Filter_filterTitle__JOH8l\",\"filterInput\":\"Filter_filterInput__1opmV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PhonebookPage_container__DJLKm\",\"phonebook\":\"PhonebookPage_phonebook__3Y_W_\",\"contacts\":\"PhonebookPage_contacts__144Ox\"};","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoading = state => state.phonebook.loading;\r\nconst getContacts = state => state.phonebook.items;\r\nconst getPhonebook = state => state.phonebook;\r\nconst getFilter = state => state.phonebook.filter;\r\n\r\n// ========================составной селектор без мнемоизирования==================\r\n// const getFilteredContacts = state => {\r\n//   const items = getContacts(state);\r\n//   const filter = getFilter(state);\r\n//   const normalizedFilter = filter.toLowerCase();\r\n//   return items.filter(contact =>\r\n//     contact.name.toLowerCase().includes(normalizedFilter),\r\n//   );\r\n// };\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (items, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return items.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n\r\nexport {\r\n  getLoading,\r\n  getContacts,\r\n  getPhonebook,\r\n  getFilter,\r\n  getFilteredContacts,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../../redux/phonebook/phonebook-operations';\r\nimport { getContacts } from '../../redux/phonebook/phonebook-selectors';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    createContact: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    this.setState({ [name]: value });\r\n    console.log(this.state);\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { name, number } = this.state;\r\n\r\n    const hasContactName = this.props.myContacts.some(item => {\r\n      return item.name === name;\r\n    });\r\n    const hasContactNumber = this.props.myContacts.some(item => {\r\n      return item.number === number;\r\n    });\r\n\r\n    if (hasContactName) {\r\n      alert(`${name} is already in contacts!!!`);\r\n      return;\r\n    }\r\n    if (hasContactNumber) {\r\n      alert(`${number} is already in contacts!!!`);\r\n      return;\r\n    }\r\n\r\n    this.props.createContact(name, number);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render () {\r\n    const { name, number } = this.state;\r\n    const { handleSubmit, handleChange } = this;\r\n    return (\r\n      <div className={styles.inputSection}>\r\n        <form onSubmit={handleSubmit}>\r\n          <label className={styles.label}>\r\n            Name\r\n            <br />\r\n            <input\r\n              className={styles.input}\r\n              name='name'\r\n              type='text'\r\n              value={name}\r\n              onChange={handleChange}\r\n              placeholder='...'\r\n            ></input>\r\n            <label className={styles.label}>\r\n              Number\r\n              <br />\r\n              <input\r\n                className={styles.input}\r\n                name='number'\r\n                type='number'\r\n                value={number}\r\n                onChange={handleChange}\r\n                placeholder='...'\r\n              ></input>\r\n            </label>\r\n            <button className={styles.button} type='submit'>\r\n              Add contact\r\n            </button>\r\n          </label>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  myContacts: getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  createContact: (name, number) => dispatch(addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import Axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSucces,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSucces,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSucces,\r\n  fetchContactsError,\r\n} from './phonebook-actions';\r\n\r\n// Axios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\n//================ асинхронный вариант ===================\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await Axios.get('/contacts');\r\n    dispatch(fetchContactsSucces(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error.message));\r\n  }\r\n};\r\n//=========================================================\r\n\r\n// const fetchContacts = () => dispatch => {\r\n//   dispatch(fetchContactsRequest());\r\n\r\n//   Axios.get(`/contacts`)\r\n//     .then(({ data }) => dispatch(fetchContactsSucces(data)))\r\n//     .catch(error => dispatch(fetchContactsError(error)));\r\n// };\r\n\r\nconst addContact = (name, number) => async dispatch => {\r\n  const items = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  try {\r\n    const { data } = await Axios.post('/contacts', items);\r\n    dispatch(addContactSucces(data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error.message));\r\n  }\r\n};\r\n\r\n// const addContact = (name, number) => dispatch => {\r\n//   const items = {\r\n//     name,\r\n//     number,\r\n//   };\r\n\r\n//   dispatch(addContactRequest());\r\n\r\n//   Axios.post('/contacts', items)\r\n//     .then(({ data }) => dispatch(addContactSucces(data)))\r\n//     .catch(error => dispatch(addContactError(error)));\r\n// };\r\n\r\nconst deleteContact = id => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  try {\r\n    Axios.delete(`/contacts/${id}`);\r\n\r\n    dispatch(deleteContactSucces(id));\r\n  } catch (error) {\r\n    dispatch(addContactError(error.message));\r\n  }\r\n};\r\n\r\n// const deleteContact = id => dispatch => {\r\n//   dispatch(deleteContactRequest());\r\n\r\n//   Axios.delete(`/contacts/${id}`)\r\n//     .then(() => dispatch(deleteContactSucces(id)))\r\n//     .catch(error => dispatch(deleteContactError(error)));\r\n// };\r\n\r\nexport { addContact, deleteContact, fetchContacts };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../../redux/phonebook/phonebook-operations';\r\nimport { getFilteredContacts } from '../../redux/phonebook/phonebook-selectors';\r\n\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <div className={styles.listSection}>\r\n      <ul>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li className={styles.item} key={id}>\r\n            {name} - {number}\r\n            <button\r\n              className={styles.button}\r\n              type='button'\r\n              onClick={() => deleteContact(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getFilteredContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteContact: id => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { filterContacts } from '../../redux/phonebook/phonebook-actions';\r\nimport styles from './Filter.module.css';\r\nimport { getFilter } from '../../redux/phonebook/phonebook-selectors';\r\n\r\nconst Filter = ({ filter, handleChange }) => {\r\n  return (\r\n    <div>\r\n      <h3 className={styles.filterTitle}>Find contacts by name</h3>\r\n      <input\r\n        className={styles.filterInput}\r\n        name='filter'\r\n        type='text'\r\n        value={filter}\r\n        onChange={handleChange}\r\n        placeholder='...'\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleChange: event => dispatch(filterContacts(event.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport ContactForm from '../../components/ContactForm';\r\nimport ContactList from '../../components/ContactList';\r\nimport Filter from '../../components/Filter';\r\nimport styles from './PhonebookPage.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { fetchContacts } from '../../redux/phonebook/phonebook-operations';\r\nimport { getLoading } from '../../redux/phonebook/phonebook-selectors';\r\n\r\nclass Phonebook extends Component {\r\n  componentDidMount () {\r\n    this.props.renderContacts();\r\n  }\r\n\r\n  render () {\r\n    const { isLoading } = this.props;\r\n    return (\r\n      <div className={styles.container}>\r\n        <h1 className={styles.phonebook}>PHONEBOOK</h1>\r\n        <ContactForm />\r\n        <h2 className={styles.contacts}>CONTACTS</h2>\r\n        <Filter />\r\n\r\n        <ContactList />\r\n        {isLoading && (\r\n          <Loader type='Watch' color='#777' height={100} width={100} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconsole.log(getLoading);\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoading: getLoading(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  renderContacts: () => dispatch(fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\r\n"],"sourceRoot":""}